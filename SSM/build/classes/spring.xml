<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    
    <!-- 扫描组件，需要spring管理的类 -->
    <context:component-scan base-package="com.ssm">
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <!-- 引入资源文件，数据库连接文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!-- 管理数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
    	<property name="driverClassName" value="${jdbc.driver}"></property>
    	<property name="url" value="${jdbc.url}"></property>
    	<property name="username" value="${jdbc.username}"></property>
    	<property name="password" value="${jdbc.password}"></property>
    </bean>
    <!-- 申明事务管理器,它是依赖于数据源的 -->
    <bean id="DataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource"><!-- 引用上面创建的数据源 --></property>
    </bean>
    <!-- 开启事务注解驱动 -->
    <tx:annotation-driven transaction-manager="DataSourceTransactionManager"/>  <!-- transaction-manager的值需要和上面的事务管理器的id一致 -->
    
    <!-- 管理mybatis操作数据库的会话对象SqlSession -->
    <bean  class="org.mybatis.spring.SqlSessionFactoryBean">
    	<!-- 设置mybatis的核心配置文件 -->
    	<property name="configLocation" value="classpath:mybatis-config.xml"></property>
    	<!-- 连接数据源 -->
    	<property name="dataSource" ref="dataSource"></property>
    	<!-- 设置类的别名 -->
    	<property name="typeAliasesPackage" value="com.ssm.bean"></property>
    	<!-- 设置mapper映射文件路径 -->
    	<property name="mapperLocations" value="classpath:com/ssm/mapper/*.xml"></property>
    </bean>
    
    <!-- 扫描对应包，并为下面所有接口生成动态代理实现类，并交给spring管理，这样子就能实现让接口实现自动装配 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    	<property name="basePackage" value="com.ssm.mapper"></property>
    </bean>

</beans>